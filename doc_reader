{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"doc_reader","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"kFWKFwjtHtas","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1595514404083,"user_tz":-330,"elapsed":1094,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"fe4d56d9-785e-453f-eb7b-cc91e1a2b2c5"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","%cd /content/drive/My\\ Drive/ML_project/Document_reader"],"execution_count":42,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","/content/drive/My Drive/ML_project/Document_reader\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_Ynb1sfPH_-7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1595515832561,"user_tz":-330,"elapsed":1842,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"5360b98e-cd61-498f-c610-f2139f64815e"},"source":["import tensorflow as tf \n","import tensorflow.keras as K\n","import tensorflow.keras.layers as L\n","import numpy as np \n","import h5py, os, datetime\n","import matplotlib.pyplot as plt\n","from time import sleep\n","import cv2\n","\n","print(tf.__version__)"],"execution_count":100,"outputs":[{"output_type":"stream","text":["2.2.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"q80o--pdIYx7","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595515052926,"user_tz":-330,"elapsed":6151,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}}},"source":["with h5py.File(\"dataset/final_dataX1.h5\", 'r') as hf:\n","  X1 = hf[\"X1\"][()]\n","  X2 = hf[\"X2\"][()]\n","  X3 = hf[\"X3\"][()]\n","  X4 = hf[\"X4\"][()]\n","\n","with h5py.File(\"dataset/final_dataY1.h5\", 'r') as hf:\n","  Y1_orig = hf[\"Y1\"][()]\n","  Y2_orig = hf[\"Y2\"][()]\n","  Y3_orig = hf[\"Y3\"][()]\n","  Y4_orig = hf[\"Y4\"][()]\n","\n","X1 = X1[..., np.newaxis].astype(np.float32)/255.0\n","X2 = X2[..., np.newaxis].astype(np.float32)/255.0\n","X3 = X3[..., np.newaxis].astype(np.float32)/255.0\n","X4 = X4[..., np.newaxis].astype(np.float32)/255.0"],"execution_count":68,"outputs":[]},{"cell_type":"code","metadata":{"id":"CSP6Bl_WfpIm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":168},"executionInfo":{"status":"ok","timestamp":1595516057925,"user_tz":-330,"elapsed":1318,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"1f445937-7cc8-42a7-f7f6-330d6b80c1ee"},"source":["print(X1.shape, X1.dtype, Y1_orig.shape, Y1_orig.dtype)\n","# for i in range(50,60):\n","i = 109\n","plt.imshow(X3[i,:,:,0])\n","print(Y1_orig[i])\n","  # sleep(1)"],"execution_count":114,"outputs":[{"output_type":"stream","text":["(30000, 32, 128, 1) float32 (30000, 1) object\n","['Left-wing']\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"ssIvLjQ7fUbu","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595515060444,"user_tz":-330,"elapsed":1029,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}}},"source":["def encode_string_vec(y, char_to_val, max_len=32):\n","  y_new = np.full((y.shape[0], max_len), -1, dtype=np.int32)\n","  for i in range(y.shape[0]):\n","    for j,v in enumerate(list(y[i][0])):\n","      if j >= 32:\n","        print(y[i][0])\n","        break\n","      y_new[i][j] = char_to_val[v]\n","  return y_new"],"execution_count":70,"outputs":[]},{"cell_type":"code","metadata":{"id":"O_kK2Kbjk2Vz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1595515064977,"user_tz":-330,"elapsed":1128,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"c2edd251-cdd9-4c9c-cbb0-9edee78c28cc"},"source":["#  !\"#&'()*+,-./0123456789:;?ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\n","all_chars = [' ', '!', '\"', '#', '&', \"'\", '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '?', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n","# Y1_len = np.array([len(x[0]) for x in Y1])\n","# s = set()\n","# for x in Y1:\n","#   [s.add(v) for v in list(x[0]) ]\n","# for x in Y2:\n","#   [s.add(v) for v in list(x[0]) ]\n","# for x in Y3:\n","#   [s.add(v) for v in list(x[0]) ]\n","# # print(s)\n","# s = list(s)\n","# s.sort()\n","print(len(all_chars))\n","char_to_val = { ch:i for i,ch in enumerate(all_chars) }  \n","val_to_char = { i:ch for i,ch in enumerate(all_chars) }  \n","\n","Y1 = encode_string_vec(Y1_orig, char_to_val)\n","Y2 = encode_string_vec(Y2_orig, char_to_val)\n","Y3 = encode_string_vec(Y3_orig, char_to_val)\n","Y4 = encode_string_vec(Y4_orig, char_to_val)\n","print(Y1.shape, Y1.dtype)"],"execution_count":71,"outputs":[{"output_type":"stream","text":["79\n","-----------------------------------------------------\n","(30000, 32) int32\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"eDpCpbcQI4dw","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595515268834,"user_tz":-330,"elapsed":1400,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}}},"source":["def create_model(input_shape=(32,128,1), classes=80):\n","    # convolution part of network\n","    num_conv_layers = 5\n","    filters = [32, 64, 128, 128, 256]\n","    kernels = [(5,5), (5,5), (3,3), (3,3), (3,3)]\n","    pool_size = [(2,2), (2,2), (2,2), (1,2), (1,1)]\n","    stride = pool_size\n","\n","    inp = L.Input(shape=input_shape)\n","    X = inp\n","\n","    for i in range(num_conv_layers):\n","        X = L.Conv2D(filters=filters[i], kernel_size=kernels[i], strides=(1,1), padding='same')(X)\n","        # X = L.BatchNormalization()(X)\n","        X = L.Activation('relu')(X)\n","        X = L.MaxPool2D(pool_size=pool_size[i], strides=stride[i], padding='valid')(X)\n","    \n","    # RNN sequential network\n","    _,n2,n3,n4 = X.shape\n","    X = tf.reshape(X, shape=(-1,n2*n3,n4))    # (None, 36, 256)\n","    X = L.Bidirectional(L.LSTM(units=128, return_sequences=True), merge_mode=\"sum\")(X)\n","    X = L.Bidirectional(L.LSTM(units=classes,  return_sequences=True), merge_mode='sum')(X)\n","    # X = L.Softmax(axis=-1)(X)\n","\n","\n","    model = K.models.Model(inputs=inp, outputs=X)\n","    return model"],"execution_count":82,"outputs":[]},{"cell_type":"code","metadata":{"id":"C4bgTTSvUKa5","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595515285682,"user_tz":-330,"elapsed":1315,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}}},"source":["@tf.function\n","def ctc_loss(y_true, y_pred):\n","  # y_true (samples, string)\n","  y_true = tf.dtypes.cast(y_true, tf.int32)\n","  y_pred = tf.dtypes.cast(y_pred, tf.float32)\n","  # y_pred = tf.transpose(y_pred, [1, 0, 2])\n","\n","  labels_len = tf.argmin(y_true, axis=-1)\n","  logit_len = np.full( (1,), y_pred.shape[1] , dtype=np.int32)\n","\n","  # print(y_true.shape, labels_len.shape, y_pred.shape, logit_len.shape)\n","  \n","  loss = tf.nn.ctc_loss(labels=y_true, logits=y_pred, label_length=labels_len, logit_length=logit_len, blank_index=-1, logits_time_major=False)\n","  \n","  return tf.reduce_mean(loss)"],"execution_count":83,"outputs":[]},{"cell_type":"code","metadata":{"id":"1pxzoxy9_vqO","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595515286934,"user_tz":-330,"elapsed":771,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}}},"source":["def predict(model, X, val_to_char):\n","  pred = model.predict(X)  # (m, 36, 80)\n","  m, sl, cls = pred.shape\n","  pred1 = tf.transpose(pred, [1, 0, 2])\n","  seq_len = tf.ones((m,), dtype=tf.int32)*sl\n","  output,_ =tf.nn.ctc_greedy_decoder(pred1, seq_len)\n","\n","  out = tf.sparse.to_dense(output[0], default_value=classes-1)\n","  pred_str = [ \"\".join([val_to_char[v] if v!=classes-1 else '.' for v in arr ]) for arr in np.argmax(pred, axis=-1)  ]\n","  strings = [ \"\".join([val_to_char[v] for v in array if v!=classes-1 ]) for array in out.numpy() ]\n","  return pred_str, out, strings"],"execution_count":84,"outputs":[]},{"cell_type":"code","metadata":{"id":"cjV3ZpJeSe7W","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595515290869,"user_tz":-330,"elapsed":1387,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}}},"source":["classes = 80\n","max_label_seq_len = 32"],"execution_count":85,"outputs":[]},{"cell_type":"code","metadata":{"id":"wUQ8qPYbJ9uU","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1595515295051,"user_tz":-330,"elapsed":2857,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}}},"source":["model = create_model()\n","\n","# %load_ext tensorboard\n","# logdir = os.path.join(\"logs\", datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\"))\n","# tensorboard_callback = tf.keras.callbacks.TensorBoard(logdir, histogram_freq=1)\n","\n","model.compile(optimizer=K.optimizers.Adam(), loss=ctc_loss, metrics=['sparse_categorical_accuracy','accuracy'])\n","# print(model.summary())"],"execution_count":86,"outputs":[]},{"cell_type":"code","metadata":{"id":"w24h6QR32opv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1595515299448,"user_tz":-330,"elapsed":1179,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"36b0c7c1-40e1-477e-aa76-b452698207c2"},"source":["print(model.trainable_variables) \n"],"execution_count":87,"outputs":[{"output_type":"stream","text":["[<tf.Variable 'conv2d_45/kernel:0' shape=(5, 5, 1, 32) dtype=float32, numpy=\n","array([[[[ 0.05247873,  0.06125998,  0.00556905,  0.07287697,\n","           0.0265248 ,  0.0179977 ,  0.05196792,  0.06545098,\n","          -0.06382008,  0.07739674,  0.02652301,  0.06519555,\n","          -0.05277579, -0.00853872,  0.06767964, -0.05041649,\n","          -0.04707254,  0.05194399,  0.02721699,  0.00506106,\n","          -0.0576627 ,  0.01522175, -0.05216036, -0.02352274,\n","          -0.02220671, -0.00648486, -0.05039512,  0.03100818,\n","           0.02051798, -0.06845762, -0.0233523 , -0.04437586]],\n","\n","        [[ 0.05128439, -0.01315899, -0.04477092,  0.07438982,\n","          -0.02617004, -0.01599681, -0.08446809, -0.04581584,\n","           0.08168282, -0.08499634,  0.04336101,  0.02504551,\n","          -0.08275498, -0.05212921, -0.01062545, -0.0765603 ,\n","           0.03997999,  0.07767335,  0.08256353, -0.07407414,\n","          -0.0805578 ,  0.05542004,  0.02967319, -0.05335453,\n","          -0.0247632 ,  0.01683492,  0.05911018, -0.00289973,\n","           0.04235931,  0.02875756, -0.05449089, -0.02107207]],\n","\n","        [[ 0.03786726, -0.05551318, -0.05656979,  0.01554837,\n","          -0.02879154,  0.05745734, -0.001167  , -0.04186399,\n","          -0.01026355, -0.07285468, -0.04672193, -0.02340563,\n","           0.06410529,  0.07719457, -0.00982498, -0.04157017,\n","          -0.07779867, -0.08423898,  0.06101021, -0.06000838,\n","           0.013786  ,  0.06828023,  0.02663992, -0.08044386,\n","          -0.07094812,  0.01607078, -0.07096178,  0.0464548 ,\n","          -0.03868488, -0.07192253, -0.00248476, -0.01907679]],\n","\n","        [[-0.01922604, -0.0312576 ,  0.08231702, -0.08274201,\n","          -0.04582269, -0.0524011 ,  0.05314279, -0.03570452,\n","           0.05555551, -0.02862453,  0.01148091, -0.02213916,\n","          -0.04452896,  0.04532678, -0.04791782, -0.08376765,\n","          -0.01532732,  0.06996323, -0.04216213,  0.04312964,\n","           0.01798037,  0.03833785,  0.06845215, -0.02453147,\n","           0.06539239, -0.02292735,  0.02045541, -0.06498842,\n","           0.00848721, -0.08114666, -0.08249737,  0.03606507]],\n","\n","        [[-0.04610344,  0.01491268,  0.03252503,  0.02604435,\n","          -0.04699587,  0.0018843 , -0.07913961,  0.03050447,\n","          -0.00186269, -0.00762699,  0.04590973,  0.00030474,\n","           0.04864605,  0.08265357, -0.06500886,  0.04398865,\n","          -0.04649267,  0.06501386, -0.05434309, -0.00625081,\n","           0.02558524,  0.05982716, -0.0171089 , -0.01575873,\n","           0.05003047,  0.04962334,  0.05847728,  0.06722084,\n","          -0.03506961,  0.04327607, -0.03322219, -0.0018004 ]]],\n","\n","\n","       [[[ 0.08206968,  0.00571512,  0.06922904, -0.04541574,\n","           0.03701416, -0.02201432, -0.02550086,  0.0226237 ,\n","           0.00585232, -0.07293957, -0.08239134, -0.05946374,\n","          -0.01821393, -0.04708229, -0.07968999, -0.0161616 ,\n","          -0.01152144,  0.05258244,  0.01309356, -0.03018053,\n","           0.08363487, -0.06422592,  0.08448024,  0.05483733,\n","           0.07226264, -0.01721988, -0.00141075,  0.08063504,\n","           0.00299389,  0.06917161, -0.06786627, -0.08098165]],\n","\n","        [[-0.06049472, -0.08217597, -0.03577423, -0.01811945,\n","          -0.06764237,  0.00665522, -0.05917201,  0.07398728,\n","          -0.06535026,  0.01121007,  0.07195142,  0.00673586,\n","           0.05866659, -0.01440181,  0.06211855, -0.04017266,\n","           0.03414636, -0.08290467,  0.03126038, -0.04831729,\n","          -0.03542356, -0.03700933, -0.01878495, -0.05781857,\n","          -0.04800397,  0.08330518,  0.04987405,  0.07559994,\n","          -0.03811415,  0.00989993, -0.01675414,  0.07387671]],\n","\n","        [[ 0.07983029,  0.0621302 ,  0.04854801,  0.04071094,\n","          -0.05256864, -0.082514  ,  0.05250581,  0.0805959 ,\n","          -0.0603741 ,  0.01623028, -0.00175168, -0.03136365,\n","           0.08239558,  0.0008494 , -0.02325494, -0.04762136,\n","           0.06971081, -0.00801416, -0.08074962,  0.04979886,\n","           0.06488733,  0.08173551, -0.02229965, -0.0838106 ,\n","           0.06015858,  0.0440187 , -0.03055747, -0.01695485,\n","           0.04536244,  0.04130636,  0.06175601,  0.05610491]],\n","\n","        [[ 0.03856824, -0.05134875,  0.030829  , -0.01820669,\n","           0.08346565, -0.05903202,  0.00225594, -0.0534559 ,\n","           0.01255056, -0.07745317, -0.05688885, -0.00014137,\n","          -0.03953123,  0.02455983, -0.04054928,  0.06648448,\n","          -0.06637534, -0.07906636,  0.02234606, -0.05718279,\n","           0.07576025,  0.04122974,  0.08373597, -0.04508214,\n","          -0.00023217, -0.03458324,  0.00232794, -0.0573826 ,\n","           0.03082122,  0.08086206,  0.00307149,  0.00398635]],\n","\n","        [[ 0.08515939,  0.07275882,  0.03960592,  0.07787769,\n","          -0.01541587,  0.05409214, -0.03317506, -0.01612685,\n","           0.08016978,  0.03145252, -0.06461182,  0.00710634,\n","           0.00945625, -0.02027566,  0.07231966, -0.00784501,\n","          -0.01236708,  0.06361745,  0.05268407, -0.00995454,\n","           0.06177031, -0.0687575 , -0.05965552, -0.04646875,\n","          -0.06370939, -0.0610807 ,  0.01299363, -0.01561179,\n","           0.0597278 , -0.0465929 ,  0.03674844, -0.02467282]]],\n","\n","\n","       [[[-0.02072952,  0.01857465,  0.0797994 ,  0.06781028,\n","           0.02818187, -0.00409948,  0.04266305,  0.01483442,\n","           0.0836661 ,  0.00534685,  0.06795409, -0.05084902,\n","          -0.00895947, -0.04445148, -0.06828721,  0.02289614,\n","           0.03937821,  0.01027115, -0.0773271 , -0.01908588,\n","          -0.01964495,  0.07922778,  0.04424269, -0.08080567,\n","           0.08474922,  0.03096184, -0.07683171, -0.07520271,\n","           0.07458408,  0.04450879, -0.04503292, -0.05149592]],\n","\n","        [[ 0.0414326 ,  0.06218582,  0.0576015 ,  0.02850507,\n","          -0.07681844,  0.0279868 , -0.05471273, -0.03746479,\n","          -0.03482585, -0.06154257,  0.03822986, -0.03328435,\n","          -0.06479567,  0.07701601,  0.02767679, -0.03608993,\n","           0.02489997, -0.03958937, -0.03350827, -0.03428086,\n","          -0.03156752,  0.00369753,  0.06336218, -0.07564319,\n","          -0.062237  , -0.07401178,  0.01272684, -0.03457576,\n","          -0.01315124,  0.06845799, -0.07586598, -0.00252498]],\n","\n","        [[ 0.02794851,  0.08520605, -0.02056082,  0.00262996,\n","           0.07275985,  0.06090917,  0.06920151,  0.00812259,\n","          -0.02685419,  0.06548604,  0.06947304,  0.01356893,\n","          -0.07726809,  0.04723683, -0.05286232,  0.07292381,\n","          -0.05063716,  0.02236292,  0.0771637 , -0.05540765,\n","          -0.00354388,  0.06391272, -0.0623068 ,  0.0017485 ,\n","           0.03781697, -0.0506091 , -0.05861492,  0.0525637 ,\n","           0.05664007, -0.05130043,  0.04897019, -0.06270199]],\n","\n","        [[-0.02303694,  0.02148119, -0.04825965, -0.01422817,\n","           0.01662416, -0.07936105, -0.01573206, -0.07825717,\n","          -0.04366813,  0.05617331,  0.04150563, -0.00571729,\n","          -0.04930569, -0.04272477,  0.04841802,  0.03104301,\n","           0.04272608,  0.05782177, -0.0842022 ,  0.06526014,\n","           0.00251853,  0.04389319,  0.049136  ,  0.00815177,\n","           0.01004089, -0.02396877,  0.03479259, -0.00738136,\n","          -0.08277828, -0.04164298, -0.00770015,  0.04748054]],\n","\n","        [[ 0.0449079 ,  0.05744389, -0.02993942, -0.00679041,\n","          -0.08103657,  0.06555758, -0.01450341, -0.04121118,\n","           0.01986718, -0.00064311,  0.05489649, -0.04544709,\n","          -0.0714819 ,  0.06425066,  0.0654861 , -0.00352674,\n","          -0.05958852, -0.02475934,  0.05809915, -0.03590349,\n","           0.07385293,  0.08466285,  0.00356401, -0.05747861,\n","           0.05247487, -0.04006014,  0.01286148, -0.00550465,\n","           0.07657821, -0.08235573,  0.00616672,  0.06823002]]],\n","\n","\n","       [[[-0.05896232,  0.06837186, -0.06922752,  0.04781568,\n","          -0.07847043,  0.04372178, -0.07972277,  0.05715427,\n","           0.08119144, -0.06502858,  0.08476919,  0.04665439,\n","          -0.06069971, -0.0152292 , -0.06849076,  0.03735504,\n","          -0.07351115, -0.02420992, -0.06156276, -0.03623787,\n","           0.05522822,  0.01110731, -0.00114215,  0.08076876,\n","           0.05174462,  0.0781474 , -0.07019222,  0.05691876,\n","           0.07059909,  0.04608421,  0.03072232,  0.0681522 ]],\n","\n","        [[ 0.0763907 ,  0.02647184, -0.02332834,  0.02001323,\n","           0.01128658, -0.0581533 , -0.02472593, -0.03300104,\n","           0.02726108, -0.04679096, -0.08419032,  0.01054014,\n","          -0.0737767 , -0.04372099,  0.00560439,  0.07888933,\n","          -0.01859201, -0.03080776, -0.05363839, -0.04661978,\n","          -0.00734126, -0.00217821,  0.04770878,  0.0316374 ,\n","          -0.01840467, -0.0296898 , -0.00882751, -0.04974223,\n","          -0.0197525 , -0.02305369, -0.03918912,  0.08260094]],\n","\n","        [[-0.02302684, -0.08039533,  0.07640304,  0.03318273,\n","           0.07860491,  0.00793514, -0.0713323 , -0.04907401,\n","          -0.0137398 ,  0.06041703,  0.08068988, -0.00074782,\n","          -0.02492977,  0.07856689, -0.00852934,  0.06822689,\n","           0.04196094,  0.02742927,  0.00170178,  0.02348173,\n","          -0.03274961,  0.0228551 ,  0.02334449, -0.0057978 ,\n","          -0.06322631,  0.07937509, -0.05985024, -0.07482603,\n","          -0.07286832, -0.02739712, -0.02209923, -0.0678179 ]],\n","\n","        [[-0.05528779,  0.01776768, -0.04717474,  0.0722243 ,\n","           0.04789619,  0.01811579, -0.034589  ,  0.06551689,\n","           0.00325494, -0.04619534,  0.01987495,  0.03441699,\n","           0.04864341,  0.01029147, -0.01466709,  0.05250284,\n","           0.01944583, -0.04258209,  0.02176515,  0.05746762,\n","          -0.04939414, -0.05036725, -0.04449419, -0.04840554,\n","           0.05507354,  0.06329602, -0.00613724,  0.02771106,\n","          -0.05156887, -0.08208121, -0.06444862,  0.04880185]],\n","\n","        [[ 0.05463876, -0.07315008, -0.05728051,  0.00755829,\n","          -0.03888281,  0.02604918,  0.07296982,  0.01632597,\n","          -0.01995558,  0.06973219, -0.0214306 ,  0.01052092,\n","           0.03423275, -0.03608262,  0.01966605,  0.08383092,\n","           0.05534419,  0.0842814 , -0.02271605, -0.00196407,\n","          -0.02078525, -0.01350255,  0.07603988,  0.07184249,\n","           0.03085694, -0.00109063,  0.01749583, -0.07890412,\n","           0.06222789, -0.07754195,  0.01735251,  0.05222078]]],\n","\n","\n","       [[[ 0.03015338, -0.03420553, -0.0556858 , -0.07203435,\n","           0.07373311,  0.08349776,  0.05999367,  0.00973922,\n","          -0.01300847,  0.04481268,  0.0457907 ,  0.00551854,\n","          -0.05544071, -0.05497669,  0.07609998, -0.07927208,\n","          -0.03681389, -0.00187107,  0.03366916, -0.03820514,\n","           0.00027404, -0.02704421, -0.0830757 , -0.03297005,\n","           0.05321543, -0.04668345,  0.05025837,  0.07514791,\n","           0.03768237,  0.00246138,  0.03932181,  0.01420484]],\n","\n","        [[ 0.02641533,  0.08264577, -0.0729728 ,  0.05749956,\n","          -0.00361288,  0.05790128,  0.05344459, -0.08365512,\n","          -0.00097868,  0.06510633, -0.04896437,  0.01246098,\n","          -0.06335309, -0.01101502,  0.01409282,  0.06008874,\n","           0.04547951,  0.05221331,  0.00305869, -0.025442  ,\n","           0.0239789 , -0.05333674,  0.04038994,  0.02523961,\n","          -0.04293346, -0.00871089,  0.0797642 ,  0.05663215,\n","           0.07491381,  0.017438  ,  0.0172507 ,  0.04478629]],\n","\n","        [[ 0.07016645, -0.08108628,  0.03582724, -0.03755092,\n","          -0.01787385,  0.06169876,  0.07470474, -0.07255009,\n","           0.00431076,  0.02191457,  0.04438196,  0.00679617,\n","          -0.04626242, -0.02271324, -0.03911796,  0.04877664,\n","           0.03162665,  0.02097971,  0.02296041, -0.06972189,\n","          -0.02982011,  0.00644452,  0.07555991,  0.00793672,\n","           0.01481728, -0.06413074,  0.04594341, -0.04166638,\n","          -0.05282731, -0.00875398,  0.01892337, -0.05027508]],\n","\n","        [[-0.03258835, -0.04109209,  0.02856626,  0.0573633 ,\n","           0.063954  , -0.02624011,  0.04402895,  0.00496092,\n","           0.02289838,  0.04875414, -0.05729084,  0.03998034,\n","           0.00569783, -0.04233609,  0.08086376,  0.06961495,\n","          -0.00907856, -0.0760938 ,  0.00362472,  0.00838478,\n","          -0.05629189, -0.02331226, -0.00407429, -0.07417157,\n","           0.01707468, -0.03089415, -0.03682571, -0.02819775,\n","           0.01519729,  0.00480819,  0.00054558,  0.01694714]],\n","\n","        [[ 0.00092044, -0.04640924, -0.0446393 , -0.07416734,\n","          -0.04444391,  0.01426873,  0.01209117,  0.02533464,\n","           0.04931249, -0.06064345,  0.03501657,  0.05141146,\n","           0.04211827,  0.05294719, -0.037475  ,  0.08092785,\n","          -0.05466192, -0.00175284, -0.03323521, -0.04465059,\n","          -0.03117234,  0.06871998,  0.07436782, -0.02684176,\n","           0.06459074, -0.01856408,  0.04958656, -0.0454477 ,\n","           0.01571742, -0.06996563, -0.00165866,  0.00938871]]]],\n","      dtype=float32)>, <tf.Variable 'conv2d_45/bias:0' shape=(32,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n","      dtype=float32)>, <tf.Variable 'conv2d_46/kernel:0' shape=(5, 5, 32, 64) dtype=float32, numpy=\n","array([[[[-0.04163992,  0.03785963,  0.04605842, ..., -0.01875846,\n","           0.02700919,  0.02769276],\n","         [-0.01959063,  0.03340116,  0.03317461, ...,  0.01217084,\n","          -0.01471023, -0.00465775],\n","         [-0.04941637, -0.02192375,  0.04897438, ...,  0.01331064,\n","           0.03988265, -0.0189242 ],\n","         ...,\n","         [-0.03759761, -0.00410693,  0.03410634, ...,  0.00227848,\n","          -0.01220381,  0.03830149],\n","         [-0.02572414,  0.01743427,  0.03742503, ...,  0.02888351,\n","          -0.02793419, -0.0430789 ],\n","         [-0.00390574,  0.04565043, -0.00137218, ..., -0.0349093 ,\n","          -0.01949836, -0.00229168]],\n","\n","        [[-0.01958531,  0.00571903,  0.02038785, ...,  0.04124638,\n","          -0.03221895, -0.03341658],\n","         [ 0.03764123,  0.01933192,  0.03681776, ...,  0.03246249,\n","          -0.01578357, -0.0240358 ],\n","         [ 0.03915581, -0.01456425, -0.01051259, ...,  0.02731687,\n","          -0.02690398,  0.01929182],\n","         ...,\n","         [-0.01767097,  0.00956934, -0.00640802, ..., -0.02272295,\n","          -0.0242923 ,  0.0301811 ],\n","         [ 0.01640096, -0.03566817, -0.03546915, ...,  0.04665517,\n","           0.01915098, -0.02636702],\n","         [ 0.0290074 , -0.01977368,  0.04495906, ...,  0.01145453,\n","           0.02969072, -0.03866447]],\n","\n","        [[ 0.03650199,  0.00709798, -0.01009042, ...,  0.01093287,\n","           0.04454802, -0.00106988],\n","         [ 0.0348726 , -0.03337555, -0.04208934, ..., -0.012667  ,\n","           0.00652809, -0.03826342],\n","         [-0.03403449, -0.04242494,  0.03538955, ..., -0.02842672,\n","          -0.01244544, -0.04707912],\n","         ...,\n","         [ 0.02806837, -0.04338798, -0.03072286, ..., -0.03364139,\n","          -0.02930726,  0.03340442],\n","         [-0.02962676,  0.0437969 ,  0.00829322, ..., -0.00886865,\n","          -0.0154729 , -0.04573133],\n","         [ 0.00566854,  0.00664968,  0.04519496, ..., -0.04560601,\n","          -0.01759456,  0.0175958 ]],\n","\n","        [[-0.02153342, -0.03617841,  0.03554083, ..., -0.02371774,\n","           0.0041425 ,  0.03653133],\n","         [ 0.04095579, -0.02807862,  0.04413888, ..., -0.00775566,\n","           0.00929465,  0.04052133],\n","         [-0.02017149,  0.01468864,  0.00587555, ..., -0.03724482,\n","          -0.02070812,  0.0493465 ],\n","         ...,\n","         [-0.00594475, -0.02150193,  0.00153862, ...,  0.00101537,\n","           0.04542788,  0.0168043 ],\n","         [-0.02975211,  0.03099937,  0.03986943, ..., -0.03254505,\n","           0.00244019, -0.04032435],\n","         [ 0.0042187 ,  0.04693306, -0.01266753, ..., -0.02308865,\n","          -0.0157515 , -0.01148893]],\n","\n","        [[ 0.03175101,  0.00403694,  0.03845269, ..., -0.01511674,\n","          -0.00939909,  0.00149627],\n","         [ 0.04301469, -0.01447896,  0.03338734, ...,  0.00552649,\n","          -0.03562905,  0.01754845],\n","         [-0.02697514, -0.00174487,  0.04378245, ..., -0.03054169,\n","          -0.02402757,  0.02059448],\n","         ...,\n","         [-0.00161753,  0.00038307,  0.01324451, ..., -0.00016307,\n","           0.04156364, -0.0233986 ],\n","         [-0.0455989 ,  0.0205549 ,  0.00015014, ..., -0.03520975,\n","           0.03615605, -0.00803758],\n","         [ 0.02213979,  0.04019424, -0.04308624, ...,  0.04892596,\n","          -0.01353205,  0.00986541]]],\n","\n","\n","       [[[ 0.00936978,  0.04818512,  0.03667656, ..., -0.02415543,\n","           0.01338792, -0.02204199],\n","         [ 0.00917879, -0.01256548,  0.03842367, ...,  0.02409298,\n","          -0.02922103,  0.01853992],\n","         [-0.0243682 ,  0.00983311, -0.01425521, ..., -0.04010797,\n","          -0.02854474, -0.03721684],\n","         ...,\n","         [ 0.02311425,  0.01082727, -0.01612344, ...,  0.02217808,\n","           0.00339448,  0.04492852],\n","         [ 0.00503786, -0.01958146,  0.03520734, ..., -0.00789325,\n","           0.03505785,  0.03517244],\n","         [-0.03424834,  0.00667883, -0.00268812, ...,  0.04356685,\n","          -0.02652402,  0.03475224]],\n","\n","        [[ 0.01924839,  0.02325854, -0.03850801, ...,  0.01798686,\n","           0.02657808,  0.04852321],\n","         [ 0.00013437, -0.03493695, -0.00243821, ..., -0.04132769,\n","          -0.00113941, -0.02475666],\n","         [-0.02988216, -0.02712003, -0.04021561, ...,  0.03774143,\n","           0.01668973,  0.01558087],\n","         ...,\n","         [ 0.00792577, -0.01754155, -0.02485191, ..., -0.01129414,\n","           0.04845978, -0.03527849],\n","         [-0.029933  , -0.01142435, -0.0430834 , ...,  0.04249377,\n","          -0.00602736, -0.03732864],\n","         [ 0.03870692, -0.0333374 , -0.03052641, ...,  0.01004733,\n","          -0.0087337 , -0.04661033]],\n","\n","        [[-0.0074896 , -0.0428033 , -0.01730091, ...,  0.04254886,\n","           0.03484923, -0.02035513],\n","         [ 0.02124048, -0.03607715, -0.01525583, ..., -0.02424189,\n","           0.02461796,  0.03950948],\n","         [ 0.03259316, -0.00417887, -0.02240802, ...,  0.01353553,\n","           0.01551756,  0.04749472],\n","         ...,\n","         [ 0.02653402, -0.03051239,  0.02977492, ..., -0.04517889,\n","          -0.04943247, -0.03240182],\n","         [ 0.02973032,  0.01912221,  0.01547774, ...,  0.01333663,\n","          -0.01844376,  0.02302063],\n","         [ 0.02138592,  0.00667087,  0.0325156 , ...,  0.04430443,\n","           0.03903724, -0.01901197]],\n","\n","        [[ 0.04530681,  0.04859224,  0.02849161, ...,  0.01697311,\n","          -0.04743191, -0.02638844],\n","         [-0.0426725 ,  0.04162904,  0.01568191, ...,  0.00393288,\n","          -0.02450547, -0.004149  ],\n","         [-0.04945552, -0.03565018,  0.00123429, ..., -0.00604929,\n","           0.04939362, -0.04955838],\n","         ...,\n","         [-0.03058523, -0.01766967, -0.0341755 , ...,  0.03650819,\n","          -0.00599027,  0.00360514],\n","         [-0.02273815,  0.0463207 , -0.04699438, ...,  0.04042952,\n","           0.03547186,  0.03467692],\n","         [-0.00516068, -0.04236807,  0.00611302, ..., -0.01615409,\n","           0.00637679, -0.00230687]],\n","\n","        [[-0.01211439,  0.00633532,  0.04661181, ..., -0.00531046,\n","          -0.02613682, -0.04692677],\n","         [-0.01138362, -0.0072081 , -0.01146004, ..., -0.02052152,\n","          -0.02458904,  0.03062418],\n","         [-0.0306648 , -0.01898314, -0.00954685, ..., -0.00547359,\n","           0.00023276,  0.04268477],\n","         ...,\n","         [-0.03287431, -0.01138146,  0.01739006, ..., -0.04758413,\n","          -0.02772698,  0.01885596],\n","         [ 0.00165653,  0.01982317,  0.01360749, ...,  0.00256665,\n","           0.00998409, -0.0062556 ],\n","         [ 0.04466185,  0.02241312,  0.01576186, ...,  0.01327935,\n","           0.02148931,  0.0349353 ]]],\n","\n","\n","       [[[ 0.00060749, -0.04214888,  0.02590397, ..., -0.03954192,\n","          -0.00503473, -0.02657614],\n","         [ 0.00619759,  0.04110893, -0.01084238, ..., -0.01944488,\n","           0.00948347, -0.00332577],\n","         [ 0.0210505 , -0.00973458,  0.02147374, ..., -0.04213611,\n","           0.00278518, -0.02450509],\n","         ...,\n","         [ 0.00728288,  0.04512615,  0.01500727, ..., -0.00306671,\n","           0.00451199, -0.00231081],\n","         [-0.02737907,  0.03009731,  0.02588442, ...,  0.03487775,\n","           0.02363798,  0.04551489],\n","         [-0.00079814,  0.04256082,  0.01274455, ...,  0.04890761,\n","           0.02902409,  0.04270885]],\n","\n","        [[ 0.0444384 ,  0.04851102, -0.01695638, ...,  0.03374473,\n","          -0.04592135,  0.01318229],\n","         [ 0.00120853,  0.04040052,  0.01849714, ..., -0.00988998,\n","           0.04003359, -0.0362376 ],\n","         [ 0.04538052,  0.03548015,  0.02196741, ..., -0.00480521,\n","          -0.01113202, -0.02749488],\n","         ...,\n","         [-0.02254392,  0.02685937,  0.03659907, ...,  0.02395887,\n","          -0.04508808,  0.03307966],\n","         [-0.00392104,  0.03580147, -0.01454247, ...,  0.03324172,\n","          -0.03310708, -0.03008512],\n","         [-0.02113537,  0.01599124,  0.04542148, ...,  0.03559259,\n","          -0.03637111, -0.03023081]],\n","\n","        [[ 0.01545024,  0.01612381,  0.01676034, ...,  0.03661077,\n","          -0.01926483,  0.02753992],\n","         [-0.01965404,  0.02381651, -0.0301066 , ..., -0.01135419,\n","          -0.04426394, -0.0468649 ],\n","         [-0.01219019,  0.04531211,  0.02881502, ...,  0.02541146,\n","          -0.01554197, -0.0453173 ],\n","         ...,\n","         [-0.04355457,  0.04455629,  0.01134289, ..., -0.02960083,\n","           0.01370445,  0.02637171],\n","         [ 0.04763195, -0.03666919,  0.03972876, ..., -0.00395802,\n","          -0.00338205,  0.01499018],\n","         [-0.03718827, -0.0078476 ,  0.02820362, ...,  0.03303057,\n","          -0.00137298, -0.02260473]],\n","\n","        [[ 0.04131328,  0.01165242,  0.02555257, ...,  0.04223484,\n","          -0.04232644,  0.00990111],\n","         [-0.0379722 , -0.01194844, -0.04575184, ...,  0.00863235,\n","          -0.0106143 ,  0.02687526],\n","         [ 0.02444476,  0.04534935,  0.03993582, ...,  0.00318294,\n","           0.01528218,  0.04258238],\n","         ...,\n","         [ 0.04881572, -0.02943435,  0.04980037, ...,  0.02903099,\n","           0.02947054,  0.02703071],\n","         [-0.04934638,  0.02163928, -0.02932881, ...,  0.02844329,\n","          -0.0460979 ,  0.04526129],\n","         [ 0.01209334, -0.03363763, -0.00091515, ..., -0.01534879,\n","          -0.00488508,  0.01264637]],\n","\n","        [[-0.01201234, -0.0300994 ,  0.00120289, ..., -0.02868032,\n","          -0.01943232,  0.03986866],\n","         [-0.03292263,  0.04202216,  0.00856236, ...,  0.01627792,\n","          -0.01762163,  0.01095689],\n","         [-0.00874173,  0.01785905, -0.01334191, ..., -0.0072348 ,\n","          -0.03440908, -0.03593151],\n","         ...,\n","         [-0.03286614, -0.04551783, -0.03930324, ...,  0.04871557,\n","          -0.0321845 , -0.03327461],\n","         [ 0.02085847,  0.03010792, -0.04634682, ..., -0.02378925,\n","          -0.01094067,  0.04111943],\n","         [ 0.0027897 , -0.03090136, -0.04699023, ..., -0.0425894 ,\n","          -0.03025568, -0.04805152]]],\n","\n","\n","       [[[ 0.02854908,  0.0343063 ,  0.03506709, ..., -0.03733446,\n","          -0.04808692, -0.02367793],\n","         [ 0.04931155, -0.04246264,  0.03655155, ..., -0.01535415,\n","           0.00542545, -0.01324396],\n","         [-0.01376789, -0.04787777, -0.01072334, ...,  0.00302281,\n","          -0.01285249,  0.01092758],\n","         ...,\n","         [-0.02109881,  0.03356372,  0.0493306 , ..., -0.01159855,\n","           0.03793715, -0.01482813],\n","         [-0.01842184,  0.03340859,  0.01532146, ..., -0.02067167,\n","          -0.03837079, -0.03981936],\n","         [-0.04903784, -0.01446688, -0.02889029, ..., -0.04946424,\n","          -0.04081379, -0.03395882]],\n","\n","        [[ 0.03030347,  0.03671198,  0.03729285, ...,  0.03643913,\n","          -0.00449301,  0.02001953],\n","         [-0.01974524,  0.02479825,  0.01283861, ..., -0.00037904,\n","           0.00414906,  0.03594191],\n","         [ 0.00312312, -0.01833584, -0.00569862, ..., -0.04959799,\n","          -0.01860858, -0.00381094],\n","         ...,\n","         [ 0.02901499, -0.00636377, -0.04495019, ...,  0.02093151,\n","           0.03717962, -0.02252798],\n","         [-0.00339562,  0.02723317, -0.0262112 , ...,  0.04055003,\n","           0.0168441 , -0.02885618],\n","         [ 0.03863306, -0.0320326 , -0.01489472, ..., -0.03318059,\n","           0.04603282,  0.02855449]],\n","\n","        [[-0.01965568, -0.02314494, -0.00332143, ...,  0.04658007,\n","           0.03346468, -0.04508295],\n","         [-0.00341647,  0.04325512,  0.01970184, ...,  0.03584069,\n","           0.01624009, -0.04088297],\n","         [ 0.03330668, -0.03413941, -0.01220276, ...,  0.01623002,\n","          -0.01007039, -0.00375246],\n","         ...,\n","         [ 0.01155036, -0.03233663,  0.02951343, ..., -0.04447085,\n","          -0.00334387, -0.00867881],\n","         [-0.02365792,  0.01853467,  0.02738991, ..., -0.02282727,\n","           0.01035397, -0.04192258],\n","         [ 0.00442047, -0.03683048,  0.00128531, ..., -0.04863032,\n","          -0.0327876 ,  0.04591453]],\n","\n","        [[ 0.04378122, -0.03332414,  0.04429715, ..., -0.00599195,\n","           0.03382875, -0.03531287],\n","         [ 0.03854838, -0.04150716, -0.04721712, ..., -0.02808244,\n","           0.04801973, -0.04233189],\n","         [-0.01148245, -0.02226726,  0.03316003, ..., -0.024271  ,\n","           0.01528827, -0.03084092],\n","         ...,\n","         [-0.01880085,  0.02526232,  0.0306207 , ..., -0.00832831,\n","          -0.0498362 ,  0.03327756],\n","         [ 0.03294886,  0.04162867,  0.03956074, ..., -0.03433161,\n","           0.01550411, -0.00507188],\n","         [ 0.0399825 ,  0.04055006, -0.0409487 , ...,  0.00751785,\n","          -0.03780885,  0.02043033]],\n","\n","        [[-0.00391356, -0.01306746, -0.02041174, ...,  0.02994892,\n","          -0.01710101, -0.01065673],\n","         [ 0.02985463,  0.02160194,  0.01882904, ..., -0.01749039,\n","          -0.01712412,  0.03218943],\n","         [-0.03278835, -0.04803116, -0.03886833, ...,  0.00893396,\n","          -0.04072521, -0.01801781],\n","         ...,\n","         [ 0.02382959, -0.04270988,  0.04716388, ...,  0.04986122,\n","           0.03530577, -0.03113067],\n","         [-0.0204    , -0.03693997,  0.03211589, ..., -0.00263353,\n","          -0.03797183, -0.01964922],\n","         [-0.04394921,  0.0496375 ,  0.04628431, ...,  0.03721956,\n","          -0.0205335 , -0.03717482]]],\n","\n","\n","       [[[ 0.03403315, -0.04276091, -0.04507834, ..., -0.0112465 ,\n","          -0.04393433,  0.03083856],\n","         [-0.02029932,  0.0183433 ,  0.03142672, ..., -0.02692298,\n","           0.03369102,  0.01944163],\n","         [-0.00811691,  0.01350773, -0.00035387, ..., -0.01677286,\n","           0.00301147, -0.01934361],\n","         ...,\n","         [-0.03091453, -0.03832418, -0.00340886, ...,  0.01544831,\n","          -0.01463587, -0.04259364],\n","         [-0.01308634, -0.04629219, -0.01938917, ...,  0.0201259 ,\n","           0.00492449, -0.03868448],\n","         [-0.03330947, -0.04121627,  0.04949559, ..., -0.00320276,\n","          -0.03488066,  0.00632627]],\n","\n","        [[-0.0118588 , -0.04177551, -0.00489045, ..., -0.02868483,\n","           0.04251364, -0.0064533 ],\n","         [ 0.0458403 ,  0.04589606, -0.02939166, ...,  0.01422543,\n","          -0.04108673,  0.02459678],\n","         [ 0.04329825,  0.00026517, -0.02233765, ...,  0.03327784,\n","           0.02382872,  0.04712743],\n","         ...,\n","         [ 0.007444  , -0.02152433,  0.00484473, ...,  0.00725534,\n","          -0.01708758,  0.03876949],\n","         [ 0.01473918,  0.0287097 , -0.00901021, ...,  0.01752884,\n","           0.03935614, -0.01825647],\n","         [ 0.0346525 ,  0.02268528, -0.01105416, ..., -0.01592394,\n","          -0.01717319,  0.02296375]],\n","\n","        [[ 0.04302717, -0.04195355, -0.03982257, ...,  0.01446145,\n","          -0.03678394, -0.03954588],\n","         [ 0.03654407,  0.03658335,  0.00224238, ...,  0.0018942 ,\n","          -0.04537427,  0.00641191],\n","         [ 0.04610946, -0.04579341, -0.01810397, ..., -0.02382869,\n","          -0.00185538,  0.04210974],\n","         ...,\n","         [ 0.01535666, -0.04893123,  0.02732934, ...,  0.00753842,\n","          -0.04701058,  0.03707934],\n","         [-0.00359974,  0.04434276, -0.02225843, ..., -0.04550862,\n","           0.02187223, -0.04786689],\n","         [ 0.01849148,  0.04886413,  0.00571909, ...,  0.03502228,\n","           0.00764347, -0.04241276]],\n","\n","        [[-0.04177731, -0.04734565,  0.03371518, ...,  0.00489835,\n","           0.02666282,  0.01053934],\n","         [-0.01189773, -0.04906068, -0.04432259, ...,  0.00920105,\n","           0.04353882, -0.02709459],\n","         [-0.02523657,  0.0076929 ,  0.04367652, ...,  0.02655171,\n","          -0.02341237,  0.01233667],\n","         ...,\n","         [ 0.04506299, -0.00764007,  0.00112007, ...,  0.02415704,\n","          -0.01170932,  0.03992549],\n","         [ 0.02458138, -0.0034229 , -0.00820242, ...,  0.02016062,\n","           0.03428974, -0.00585992],\n","         [ 0.01056603, -0.03022206,  0.01871349, ..., -0.03434386,\n","          -0.04838971, -0.04426903]],\n","\n","        [[ 0.00820148,  0.02207405,  0.02184724, ..., -0.02214118,\n","           0.03817549,  0.00811559],\n","         [ 0.02663201,  0.00088999,  0.04391212, ...,  0.03908814,\n","           0.03827956, -0.03021568],\n","         [-0.02604046,  0.02579604,  0.02151524, ...,  0.03652925,\n","          -0.04358865, -0.03661206],\n","         ...,\n","         [ 0.03466007,  0.02584615,  0.03493366, ..., -0.01131107,\n","           0.01121239, -0.03444091],\n","         [-0.03094848, -0.04011532, -0.02355369, ..., -0.03182527,\n","           0.01625479,  0.04693535],\n","         [ 0.03203747,  0.01787878, -0.04201657, ...,  0.01361021,\n","          -0.04569255,  0.02743803]]]], dtype=float32)>, <tf.Variable 'conv2d_46/bias:0' shape=(64,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>, <tf.Variable 'conv2d_47/kernel:0' shape=(3, 3, 64, 128) dtype=float32, numpy=\n","array([[[[-0.021425  ,  0.02280618,  0.0108544 , ...,  0.05269412,\n","          -0.0230093 ,  0.01890449],\n","         [-0.0572663 ,  0.0283083 ,  0.02152275, ..., -0.00814783,\n","          -0.05007751, -0.02713046],\n","         [ 0.04243263, -0.00743028, -0.02356258, ...,  0.03088697,\n","          -0.01682518, -0.04498221],\n","         ...,\n","         [ 0.02506323, -0.02410132, -0.0162442 , ...,  0.05697328,\n","           0.04240136, -0.02831091],\n","         [ 0.04540993,  0.05750689,  0.04677315, ...,  0.02440888,\n","           0.04577887, -0.00431006],\n","         [-0.01755936, -0.01036455, -0.04225367, ..., -0.05702147,\n","          -0.03968148, -0.01740108]],\n","\n","        [[-0.03153122, -0.04392665, -0.01397269, ...,  0.00872928,\n","          -0.01802521,  0.04355716],\n","         [-0.04657033, -0.00165481, -0.03307973, ..., -0.01366884,\n","          -0.04662119, -0.04908873],\n","         [ 0.0267395 ,  0.05110705,  0.03113358, ...,  0.00080876,\n","           0.04587562, -0.00810057],\n","         ...,\n","         [ 0.00507033,  0.01907897,  0.04420407, ...,  0.04241088,\n","          -0.05802888, -0.02316387],\n","         [ 0.00127326,  0.00520403, -0.02568272, ...,  0.00973022,\n","          -0.04383636, -0.01501862],\n","         [-0.01024702, -0.03001661, -0.0249122 , ...,  0.0398019 ,\n","          -0.02817559, -0.05319784]],\n","\n","        [[-0.00613811, -0.00903491,  0.04412192, ..., -0.01094819,\n","          -0.01171321,  0.05307524],\n","         [-0.01127727, -0.0574582 , -0.0495807 , ..., -0.04464212,\n","           0.05541265,  0.01433278],\n","         [ 0.03126026,  0.01473665,  0.02834366, ..., -0.01842322,\n","          -0.02716113, -0.0320793 ],\n","         ...,\n","         [-0.03357161, -0.01614136,  0.01729292, ..., -0.01843784,\n","           0.04826525, -0.04856129],\n","         [ 0.04945548,  0.04629468, -0.04965284, ..., -0.03325769,\n","           0.04581676, -0.04119288],\n","         [-0.02148785, -0.03339885,  0.01979931, ...,  0.00395581,\n","          -0.01924092,  0.04376838]]],\n","\n","\n","       [[[ 0.042671  ,  0.0370391 , -0.02842107, ...,  0.04827888,\n","          -0.00875421,  0.00481745],\n","         [-0.02405818,  0.02753529, -0.02072845, ...,  0.05026568,\n","           0.05386565, -0.05291524],\n","         [-0.04489991,  0.04103464, -0.03694206, ..., -0.03874433,\n","           0.00287995, -0.00877958],\n","         ...,\n","         [-0.0357669 , -0.04780674, -0.05133891, ..., -0.04766612,\n","          -0.00336565, -0.02635789],\n","         [-0.00815107, -0.02284441, -0.0309564 , ..., -0.01087857,\n","          -0.02042861,  0.03810215],\n","         [ 0.03541571, -0.03183313, -0.02040252, ..., -0.03354099,\n","          -0.02062539, -0.04733199]],\n","\n","        [[-0.00925758,  0.02337627,  0.03752149, ..., -0.0254016 ,\n","           0.05665607, -0.05040302],\n","         [ 0.03855716,  0.00608281, -0.03785165, ..., -0.027313  ,\n","          -0.00768781,  0.04824041],\n","         [-0.00644333, -0.02097251,  0.05621633, ..., -0.01134381,\n","          -0.01713098,  0.01502309],\n","         ...,\n","         [-0.00421933, -0.01325315, -0.05765214, ..., -0.00303442,\n","          -0.04328154,  0.02608036],\n","         [-0.00846376,  0.04689712, -0.0068294 , ..., -0.05235757,\n","          -0.03171435, -0.02922292],\n","         [-0.04307291,  0.02262676, -0.04764839, ...,  0.04023663,\n","          -0.03845087, -0.00455113]],\n","\n","        [[ 0.05875826, -0.00821929,  0.02588665, ...,  0.00198267,\n","          -0.01260763,  0.03213582],\n","         [-0.05523457,  0.05088566,  0.02921641, ...,  0.01092129,\n","           0.05497608, -0.02950352],\n","         [ 0.03701284,  0.00055839,  0.02451759, ..., -0.01831792,\n","           0.0070569 ,  0.01022327],\n","         ...,\n","         [-0.01101337,  0.04084549,  0.02003358, ..., -0.03092543,\n","          -0.05210924,  0.04453046],\n","         [ 0.03957901, -0.00641769, -0.0109776 , ..., -0.03547981,\n","          -0.02153673, -0.05173831],\n","         [-0.00843138,  0.02743538, -0.02900644, ..., -0.02977501,\n","          -0.02792837,  0.04666546]]],\n","\n","\n","       [[[ 0.0150809 ,  0.00573359,  0.0475741 , ...,  0.00839724,\n","          -0.0508711 ,  0.02488684],\n","         [ 0.04625164,  0.00034001, -0.0174392 , ...,  0.05572207,\n","          -0.05527381,  0.03100445],\n","         [ 0.02956909,  0.02463504, -0.01085697, ..., -0.0353006 ,\n","          -0.001797  , -0.00709506],\n","         ...,\n","         [ 0.016969  ,  0.0497812 ,  0.02697955, ..., -0.05664583,\n","          -0.05021031, -0.01892497],\n","         [ 0.0287991 ,  0.04538915, -0.04572936, ...,  0.03076907,\n","           0.04133244,  0.03053636],\n","         [ 0.02189736, -0.02530866, -0.00661409, ...,  0.04891334,\n","           0.04703913,  0.05812467]],\n","\n","        [[-0.02541746,  0.04320109,  0.03788387, ..., -0.02622818,\n","          -0.03107654,  0.0490707 ],\n","         [ 0.03059718, -0.03563669, -0.04790696, ..., -0.04151487,\n","          -0.0584073 , -0.03349267],\n","         [ 0.00328644,  0.02191212, -0.04250015, ..., -0.03187344,\n","          -0.01429757,  0.01695966],\n","         ...,\n","         [ 0.01964009,  0.03063282,  0.00154231, ...,  0.00615576,\n","           0.01015991, -0.00908589],\n","         [-0.00446716, -0.03611724, -0.00928896, ...,  0.00943169,\n","          -0.04448843, -0.04544608],\n","         [ 0.02606956,  0.03642077, -0.04099843, ...,  0.05460474,\n","           0.04234098, -0.02674132]],\n","\n","        [[ 0.04728035, -0.03735773, -0.00333109, ...,  0.02204373,\n","           0.032405  , -0.05861015],\n","         [ 0.00330458, -0.0377484 , -0.03529292, ...,  0.05139175,\n","           0.01397986, -0.05072057],\n","         [ 0.00461322,  0.02387596, -0.01838208, ..., -0.02268001,\n","          -0.00973324, -0.05508665],\n","         ...,\n","         [-0.02391574,  0.0529313 ,  0.0579284 , ..., -0.01605902,\n","          -0.02508707,  0.04209335],\n","         [ 0.05197171,  0.04354082,  0.04969445, ...,  0.0541221 ,\n","           0.05109603, -0.0368575 ],\n","         [ 0.00076176,  0.05202251, -0.04140581, ...,  0.01923592,\n","           0.02381646,  0.0343603 ]]]], dtype=float32)>, <tf.Variable 'conv2d_47/bias:0' shape=(128,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>, <tf.Variable 'conv2d_48/kernel:0' shape=(3, 3, 128, 128) dtype=float32, numpy=\n","array([[[[-1.42826773e-02, -5.09678945e-02,  7.15448707e-03, ...,\n","          -5.33779711e-03, -4.14257310e-02,  4.38251868e-02],\n","         [-4.52789403e-02, -1.11563131e-03,  3.00270692e-02, ...,\n","           2.05788985e-02,  1.47031769e-02, -2.38543209e-02],\n","         [-2.72027310e-02,  2.45850906e-02, -3.79054658e-02, ...,\n","           3.92100364e-02,  3.75239551e-03,  1.67348608e-03],\n","         ...,\n","         [ 3.05016935e-02,  3.76803055e-02,  6.22712448e-03, ...,\n","           3.19292694e-02,  2.32577100e-02, -1.04149058e-02],\n","         [ 3.58386487e-02,  1.34678259e-02,  2.99421325e-03, ...,\n","           1.18044391e-03,  1.68931857e-02, -2.65796222e-02],\n","         [ 2.46864557e-02, -2.25406159e-02,  1.96783766e-02, ...,\n","          -3.71336415e-02, -3.94194573e-02,  3.19205225e-02]],\n","\n","        [[-4.71453331e-02,  3.15875039e-02, -1.12767741e-02, ...,\n","           2.60287523e-02,  4.08590138e-02,  2.55214050e-02],\n","         [-7.05045834e-03,  3.89511138e-02, -3.94485369e-02, ...,\n","           2.27121636e-03,  2.60108188e-02,  2.11837664e-02],\n","         [-2.94886194e-02,  2.68584117e-02, -7.89679214e-03, ...,\n","           3.19235846e-02,  3.93445939e-02, -2.89014149e-02],\n","         ...,\n","         [ 2.90419906e-02,  3.23438123e-02,  4.47692126e-02, ...,\n","          -4.44874689e-02,  6.09988347e-03, -2.51945853e-02],\n","         [-3.61655578e-02,  2.23852694e-02, -3.58548202e-02, ...,\n","           4.27287892e-02, -6.06789812e-03, -1.65598318e-02],\n","         [ 2.48944759e-02,  1.80433989e-02, -4.04484719e-02, ...,\n","           4.64787558e-02,  3.24758440e-02,  8.45250860e-03]],\n","\n","        [[-4.45153415e-02,  4.23374102e-02, -2.51906067e-02, ...,\n","          -2.41379142e-02, -2.56652683e-02,  4.29490581e-02],\n","         [ 1.72344148e-02,  4.50967550e-02, -2.30735168e-03, ...,\n","          -3.58960070e-02,  4.22702506e-02, -7.75432959e-03],\n","         [ 1.29444227e-02, -1.47758685e-02, -4.34690528e-02, ...,\n","          -4.38259393e-02, -2.01985892e-02,  1.38267055e-02],\n","         ...,\n","         [ 1.47481933e-02, -1.23197213e-02,  3.23531330e-02, ...,\n","          -4.23915014e-02, -8.55603442e-03, -2.31829956e-02],\n","         [ 2.84918547e-02,  1.01171844e-02,  4.13365141e-02, ...,\n","          -6.68160617e-04,  2.75392756e-02,  4.71662357e-02],\n","         [ 7.73218647e-03,  9.91299003e-03,  3.52498442e-02, ...,\n","          -1.59531236e-02,  2.93945074e-02, -4.29732576e-02]]],\n","\n","\n","       [[[-9.06554237e-03, -3.87672000e-02, -4.52055745e-02, ...,\n","          -3.06381453e-02, -7.76950270e-03,  3.03485617e-02],\n","         [-9.66646895e-03, -3.07554454e-02, -4.65714261e-02, ...,\n","           1.75233185e-02,  4.48190123e-02, -2.79855505e-02],\n","         [-2.18878090e-02,  3.13462019e-02, -4.28432897e-02, ...,\n","           3.72412577e-02,  4.85128462e-02, -1.34066492e-03],\n","         ...,\n","         [ 4.34238389e-02,  5.06355315e-02,  1.38158128e-02, ...,\n","          -3.63961570e-02,  1.84168145e-02,  4.88617644e-02],\n","         [ 3.85632738e-02,  4.68926504e-02, -2.55529583e-03, ...,\n","           1.00255832e-02, -2.11698115e-02,  4.88872230e-02],\n","         [-4.47048172e-02, -1.16335899e-02,  3.37850600e-02, ...,\n","          -2.45796144e-03, -3.31932604e-02,  4.58846986e-03]],\n","\n","        [[-3.79733071e-02,  3.25556770e-02,  3.28018218e-02, ...,\n","          -8.69855285e-06, -1.36760101e-02,  2.18511596e-02],\n","         [ 2.10437179e-03, -3.91776487e-03, -2.50451285e-02, ...,\n","          -1.71396025e-02, -1.89040005e-02, -2.53101811e-02],\n","         [-3.10357548e-02, -1.46638379e-02, -3.96079943e-02, ...,\n","          -3.10612191e-02,  4.15369123e-03,  2.65769735e-02],\n","         ...,\n","         [-4.94300760e-02, -2.36242469e-02,  3.38994786e-02, ...,\n","          -4.21304926e-02, -1.41101927e-02, -3.58180776e-02],\n","         [-3.12844813e-02,  3.93239036e-02,  4.37654704e-02, ...,\n","           1.69699118e-02, -1.47036128e-02, -2.88810004e-02],\n","         [ 3.89869213e-02, -2.49191653e-02, -5.08127771e-02, ...,\n","          -4.49767187e-02, -1.53961293e-02, -1.20164901e-02]],\n","\n","        [[ 4.63259518e-02,  2.84089446e-02, -1.66280009e-02, ...,\n","           3.47480699e-02,  3.57722193e-02,  4.32288051e-02],\n","         [-5.04468530e-02, -1.21050999e-02, -2.87195947e-02, ...,\n","          -2.70293057e-02, -4.96982560e-02, -3.76932919e-02],\n","         [ 2.22298801e-02,  4.88434806e-02,  3.73921469e-02, ...,\n","          -5.09810820e-02, -4.70686443e-02, -4.44341823e-03],\n","         ...,\n","         [-4.40691151e-02, -3.76967452e-02, -4.72839959e-02, ...,\n","           2.04312205e-02,  3.37115750e-02,  4.65695187e-02],\n","         [-1.18340105e-02,  1.34000033e-02,  3.21428701e-02, ...,\n","          -4.82755117e-02, -3.86424549e-02,  7.54607096e-03],\n","         [-2.03776844e-02,  1.54076144e-03,  1.15117282e-02, ...,\n","           2.89610550e-02, -3.04560456e-02, -3.88446450e-03]]],\n","\n","\n","       [[[ 2.71903053e-02,  5.08236662e-02, -1.07519738e-02, ...,\n","           2.67106965e-02,  1.35745481e-03, -2.59270351e-02],\n","         [-4.35178652e-02,  3.45315188e-02, -2.78245118e-02, ...,\n","           5.15609607e-03, -3.07484381e-02,  5.06821722e-02],\n","         [ 2.51151323e-02,  3.60891670e-02, -1.19478628e-03, ...,\n","           4.94375601e-02,  5.17272949e-03,  1.63647234e-02],\n","         ...,\n","         [-1.20557398e-02,  1.47164240e-02, -2.55201794e-02, ...,\n","          -2.10614428e-02, -9.78038460e-03,  2.82248333e-02],\n","         [-2.94553302e-02, -1.62249058e-02, -3.61137316e-02, ...,\n","           4.81659546e-03,  3.62454951e-02, -4.10232693e-02],\n","         [-3.83557938e-02,  2.36333460e-02, -3.10604777e-02, ...,\n","           2.79219523e-02, -3.34450528e-02,  3.25585604e-02]],\n","\n","        [[-2.52063498e-02,  9.05156136e-03,  1.01056136e-02, ...,\n","           3.16970050e-02,  3.65629718e-02, -2.83220839e-02],\n","         [-2.71209944e-02, -3.23492885e-02,  1.07206218e-02, ...,\n","          -2.63045691e-02,  1.90496594e-02,  4.09213677e-02],\n","         [ 4.79154661e-03,  4.69326451e-02, -4.11025472e-02, ...,\n","           1.14058033e-02, -2.57201884e-02,  3.52507085e-02],\n","         ...,\n","         [ 3.72984931e-02,  3.23993340e-02, -4.37777117e-02, ...,\n","           1.31461099e-02,  1.88951194e-02,  2.89320722e-02],\n","         [ 4.02025133e-02, -4.92332540e-02, -9.66499746e-03, ...,\n","           3.71496677e-02,  6.47661462e-03, -2.70399395e-02],\n","         [-2.60432158e-02, -5.00569120e-03, -3.00782192e-02, ...,\n","          -4.19449471e-02, -1.22919790e-02, -2.58474275e-02]],\n","\n","        [[ 3.14300060e-02, -2.29359139e-02,  4.14427370e-03, ...,\n","          -4.84659895e-03,  8.70104879e-04, -2.48813387e-02],\n","         [-4.03723344e-02,  1.32874399e-03, -3.85657661e-02, ...,\n","           4.44271117e-02,  3.60142663e-02, -1.02657899e-02],\n","         [-1.51555091e-02,  4.38208058e-02, -2.07774341e-02, ...,\n","           4.84375134e-02, -5.23791835e-03, -1.09586380e-02],\n","         ...,\n","         [ 1.39202550e-02,  2.27531418e-03, -3.19500118e-02, ...,\n","          -2.66483519e-02, -4.59366888e-02,  3.80373895e-02],\n","         [ 4.75484282e-02,  1.10762045e-02,  2.27793381e-02, ...,\n","           3.25987712e-02, -4.30572927e-02,  4.43593413e-02],\n","         [-1.41105056e-03, -1.50571428e-02,  2.84888074e-02, ...,\n","          -1.60739273e-02,  3.36316973e-03,  9.98528674e-03]]]],\n","      dtype=float32)>, <tf.Variable 'conv2d_48/bias:0' shape=(128,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>, <tf.Variable 'conv2d_49/kernel:0' shape=(3, 3, 128, 256) dtype=float32, numpy=\n","array([[[[ 2.72319131e-02,  2.30374970e-02, -3.34464014e-02, ...,\n","          -3.30121927e-02,  4.06428091e-02,  5.89140132e-03],\n","         [-5.99392131e-03, -2.58041229e-02,  2.35082395e-02, ...,\n","          -1.12730972e-02, -5.65469265e-03, -2.92947795e-02],\n","         [-1.00982673e-02,  3.32352109e-02, -2.73874700e-02, ...,\n","          -1.78385526e-04, -2.65587978e-02,  2.69752927e-02],\n","         ...,\n","         [ 4.12835069e-02,  1.72384381e-02,  2.43464597e-02, ...,\n","           3.95237543e-02,  2.55828686e-02, -2.65537314e-02],\n","         [ 6.73184916e-03,  2.64325626e-02, -1.14475489e-02, ...,\n","          -3.71318310e-04, -2.57141292e-02, -4.93580103e-03],\n","         [ 1.14003606e-02,  3.22808139e-02,  1.37034543e-02, ...,\n","           1.24339946e-02,  2.69771554e-02,  1.85905285e-02]],\n","\n","        [[-3.35365050e-02,  1.22695565e-02, -1.17424130e-02, ...,\n","           1.47784166e-02,  7.96406344e-03, -5.10404631e-03],\n","         [-3.49137001e-02,  1.54035278e-02,  1.23508871e-02, ...,\n","           1.27389245e-02, -1.83969047e-02, -3.39208469e-02],\n","         [-2.53095627e-02, -1.13511197e-02,  3.12467106e-02, ...,\n","           4.12265770e-02,  2.01175027e-02, -2.92495992e-02],\n","         ...,\n","         [-1.29387975e-02,  5.96867129e-03,  3.88476886e-02, ...,\n","           2.61478238e-02, -4.59480286e-03,  3.63570936e-02],\n","         [-2.30305698e-02,  3.15451510e-02,  3.64072360e-02, ...,\n","           1.44183524e-02,  2.84629576e-02, -3.53294834e-02],\n","         [ 2.61587091e-02,  3.77744548e-02,  2.56688036e-02, ...,\n","           1.83309615e-02, -4.16063182e-02, -6.77353144e-03]],\n","\n","        [[ 2.88431384e-02, -1.30669288e-02, -2.99920514e-03, ...,\n","          -3.47084999e-02,  2.56949849e-02,  3.69247310e-02],\n","         [-7.38845393e-03,  3.17433514e-02, -3.91912758e-02, ...,\n","          -1.50127616e-02, -3.91522162e-02, -2.81837191e-02],\n","         [-1.94512606e-02,  3.21450941e-02,  4.04102914e-02, ...,\n","           1.93804502e-03, -5.27430326e-04, -1.29944086e-02],\n","         ...,\n","         [ 1.87130272e-02, -2.01054290e-03, -3.77123281e-02, ...,\n","           2.01904662e-02,  2.02941298e-02,  1.24407113e-02],\n","         [-1.84411108e-02,  3.21556069e-02, -8.61297920e-03, ...,\n","           2.76568420e-02, -1.49675813e-02, -2.07916908e-02],\n","         [ 2.13307627e-02, -1.84097700e-02, -2.91781239e-02, ...,\n","           1.27006881e-02,  3.54996137e-02,  3.62431444e-02]]],\n","\n","\n","       [[[-2.52433624e-02,  1.60666183e-03,  1.41071789e-02, ...,\n","          -2.48590615e-02,  2.34123357e-02,  3.79764624e-02],\n","         [-1.49285495e-02,  4.05271538e-02, -3.32003348e-02, ...,\n","           1.65391751e-02,  9.98763368e-03, -1.95244066e-02],\n","         [ 2.64687724e-02,  3.77580710e-02, -2.67593935e-03, ...,\n","          -2.03902330e-02, -5.84633276e-03, -2.48779561e-02],\n","         ...,\n","         [-2.97594182e-02, -4.16072309e-02, -1.10159721e-02, ...,\n","           3.64242308e-02, -4.02041152e-03,  2.44327672e-02],\n","         [-2.11660974e-02, -2.23532915e-02,  3.57059725e-02, ...,\n","           2.62940265e-02, -2.64412872e-02,  5.67350909e-03],\n","         [ 1.34584010e-02,  2.36728080e-02, -4.10474464e-03, ...,\n","          -4.06834409e-02,  9.53069329e-03,  3.89815085e-02]],\n","\n","        [[-2.17152834e-02,  1.07275955e-02,  2.20723785e-02, ...,\n","          -1.62226073e-02, -3.02721374e-02,  1.91884041e-02],\n","         [-1.74337626e-02,  2.30809785e-02, -3.66045907e-03, ...,\n","           1.41216516e-02, -2.96081007e-02,  4.86027449e-04],\n","         [ 3.16798426e-02,  2.70935185e-02, -2.68932581e-02, ...,\n","          -2.77364664e-02, -3.90949063e-02, -3.98320854e-02],\n","         ...,\n","         [ 3.06912176e-02,  3.99077274e-02,  3.46009545e-02, ...,\n","          -2.47230139e-02, -3.11076250e-02,  7.87012652e-03],\n","         [ 1.17323212e-02, -2.79371552e-02, -2.19757669e-02, ...,\n","          -2.38355994e-02,  3.68134491e-02, -3.89411859e-02],\n","         [ 6.65318221e-04, -1.87278390e-02,  1.93384402e-02, ...,\n","          -2.60688476e-02, -1.53713729e-02,  2.87016742e-02]],\n","\n","        [[-1.36638992e-02,  7.55240396e-03, -1.71669330e-02, ...,\n","          -4.15881798e-02,  3.97439487e-02, -1.67240575e-03],\n","         [ 3.43525447e-02, -1.36560407e-02, -1.05916262e-02, ...,\n","          -3.22140679e-02, -3.06248665e-04, -3.10817659e-02],\n","         [ 3.68634053e-02, -3.26180756e-02, -2.36071255e-02, ...,\n","          -1.95081905e-03, -1.48317516e-02, -2.81997137e-02],\n","         ...,\n","         [-1.26380734e-02,  3.63943465e-02,  3.56363170e-02, ...,\n","           9.49731469e-03,  3.39673832e-03,  2.16237120e-02],\n","         [-6.27377629e-03, -3.04927044e-02,  7.40207359e-03, ...,\n","          -1.89622547e-02,  3.07314433e-02, -1.75570454e-02],\n","         [-1.65920705e-04, -2.53613498e-02, -2.81862728e-02, ...,\n","          -4.41827253e-03, -3.56165096e-02,  2.70577259e-02]]],\n","\n","\n","       [[[ 1.56975575e-02, -3.73477265e-02, -1.33088138e-02, ...,\n","          -5.46313450e-03, -3.09155490e-02,  3.42906751e-02],\n","         [-1.48339476e-02, -1.00622959e-02,  3.96708287e-02, ...,\n","          -2.81450860e-02,  3.20980735e-02, -1.57258511e-02],\n","         [-3.44100706e-02, -1.29216909e-02,  1.52608342e-02, ...,\n","          -2.02917568e-02,  3.60068865e-02,  3.77398022e-02],\n","         ...,\n","         [-3.83959226e-02,  1.41885094e-02, -2.99339890e-02, ...,\n","          -3.38365845e-02, -1.24864392e-02, -2.01580822e-02],\n","         [-1.95684731e-02, -1.02946274e-02, -3.33338901e-02, ...,\n","           2.04966180e-02,  1.37684643e-02, -5.02910092e-03],\n","         [-2.17602663e-02, -7.02329352e-03, -6.81905076e-03, ...,\n","          -2.01729741e-02,  2.59647481e-02, -1.66237950e-02]],\n","\n","        [[ 4.07059602e-02, -9.14801285e-03,  6.73254207e-03, ...,\n","           8.47205520e-03, -3.53071094e-02, -3.72990891e-02],\n","         [ 1.59561038e-02, -3.75728905e-02,  3.67374457e-02, ...,\n","           8.95039365e-03, -1.45161357e-02, -8.02986324e-05],\n","         [ 3.00887637e-02,  4.11473401e-02, -1.56179573e-02, ...,\n","          -2.20180750e-02,  1.39363296e-02, -2.21770518e-02],\n","         ...,\n","         [ 1.20556243e-02, -2.74536908e-02, -3.26874182e-02, ...,\n","          -3.60099599e-02,  3.74319889e-02,  1.98432915e-02],\n","         [ 1.89800262e-02, -1.37969255e-02,  2.32594647e-02, ...,\n","          -2.42137127e-02, -1.13148894e-02, -2.64835469e-02],\n","         [-3.51003818e-02, -1.83766391e-02,  3.54886167e-02, ...,\n","           1.67546570e-02,  3.40110548e-02,  8.15896317e-03]],\n","\n","        [[-2.74192300e-02,  1.31191723e-02, -2.32406333e-03, ...,\n","          -1.62051432e-02,  1.11939125e-02, -1.13125052e-02],\n","         [ 3.88711803e-02,  1.61582530e-02,  1.92943327e-02, ...,\n","           1.86320730e-02, -2.50027589e-02, -2.96637323e-02],\n","         [-1.29547715e-03,  2.50533931e-02, -3.77082527e-02, ...,\n","          -1.44241452e-02, -1.10392384e-02, -1.09519269e-02],\n","         ...,\n","         [ 3.95862944e-02,  1.07692592e-02, -3.95307466e-02, ...,\n","           1.16514973e-02,  3.32606249e-02, -2.34992430e-03],\n","         [-7.16349483e-03,  2.39063390e-02, -1.93159580e-02, ...,\n","          -1.49191227e-02,  7.43219256e-03,  1.52046271e-02],\n","         [ 2.47157253e-02,  1.73207112e-02, -1.82793438e-02, ...,\n","          -2.70535462e-02,  2.68812105e-03, -5.08384034e-03]]]],\n","      dtype=float32)>, <tf.Variable 'conv2d_49/bias:0' shape=(256,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0.], dtype=float32)>, <tf.Variable 'bidirectional_18/forward_lstm_18/lstm_cell_55/kernel:0' shape=(256, 512) dtype=float32, numpy=\n","array([[-0.0215399 ,  0.06167685,  0.01459442, ..., -0.07314335,\n","         0.00496298, -0.05070656],\n","       [-0.0649716 ,  0.00687394,  0.00719605, ..., -0.08116214,\n","        -0.04879842, -0.07438375],\n","       [-0.07466123, -0.00069292, -0.00252447, ..., -0.01782902,\n","         0.06500656,  0.02391947],\n","       ...,\n","       [-0.01673238,  0.06209733,  0.04000724, ..., -0.02805665,\n","         0.02614131,  0.03852544],\n","       [-0.07203134,  0.06834219, -0.03957488, ..., -0.08352137,\n","         0.00883695,  0.01237614],\n","       [ 0.06157107,  0.0090538 ,  0.06406999, ..., -0.00194892,\n","         0.08421247,  0.06208762]], dtype=float32)>, <tf.Variable 'bidirectional_18/forward_lstm_18/lstm_cell_55/recurrent_kernel:0' shape=(128, 512) dtype=float32, numpy=\n","array([[-0.05448723,  0.03211695, -0.0339439 , ..., -0.01624025,\n","        -0.11059065,  0.02244112],\n","       [-0.01816796,  0.02792203,  0.05137278, ..., -0.01434227,\n","         0.01242129, -0.08760936],\n","       [-0.05280311,  0.02632145,  0.02279806, ..., -0.06372833,\n","        -0.03724064, -0.03396841],\n","       ...,\n","       [-0.01963152, -0.02666294, -0.06326073, ...,  0.01932713,\n","         0.02126816, -0.03088409],\n","       [-0.01574662,  0.01075931,  0.03977035, ..., -0.03275833,\n","        -0.06254397,  0.02391322],\n","       [ 0.08102797, -0.01320011,  0.04535988, ..., -0.04793648,\n","        -0.01431834,  0.00196208]], dtype=float32)>, <tf.Variable 'bidirectional_18/forward_lstm_18/lstm_cell_55/bias:0' shape=(512,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0.], dtype=float32)>, <tf.Variable 'bidirectional_18/backward_lstm_18/lstm_cell_56/kernel:0' shape=(256, 512) dtype=float32, numpy=\n","array([[ 7.5172849e-02,  6.4916201e-02, -6.7528397e-02, ...,\n","         8.3423384e-02,  7.3457889e-02,  7.5574763e-02],\n","       [-2.5186747e-02, -3.3304095e-06,  2.9142730e-02, ...,\n","         5.2532144e-02,  8.7797567e-03,  5.6468867e-02],\n","       [ 5.7390042e-02, -8.0475025e-02,  6.4133428e-02, ...,\n","        -7.7109635e-02, -3.5465855e-02, -1.4730096e-03],\n","       ...,\n","       [-5.2598741e-02, -6.8231344e-02, -3.4991801e-03, ...,\n","        -6.0586981e-02, -3.3095412e-02,  3.6290795e-02],\n","       [ 7.3286891e-04, -6.7390218e-02, -7.6026760e-02, ...,\n","        -9.3955249e-03, -7.2925575e-02,  7.0890561e-03],\n","       [ 2.1371275e-02, -3.3445843e-02,  5.8492772e-02, ...,\n","        -2.6482120e-03,  2.0196326e-02,  1.7671078e-02]], dtype=float32)>, <tf.Variable 'bidirectional_18/backward_lstm_18/lstm_cell_56/recurrent_kernel:0' shape=(128, 512) dtype=float32, numpy=\n","array([[-0.02310205,  0.02669656,  0.02244983, ..., -0.02596228,\n","         0.03759606,  0.04113152],\n","       [ 0.01866394,  0.02456379, -0.02085306, ..., -0.07229213,\n","        -0.01398276, -0.0216257 ],\n","       [ 0.01990494,  0.05056859,  0.10510731, ...,  0.03384048,\n","         0.00998476, -0.0749557 ],\n","       ...,\n","       [ 0.01827321, -0.00844163,  0.05343726, ...,  0.0600634 ,\n","         0.03018361, -0.02696163],\n","       [-0.048772  ,  0.04826837,  0.02644946, ..., -0.00145699,\n","        -0.04919557, -0.03728031],\n","       [-0.00789632, -0.00315326, -0.01651474, ..., -0.00859236,\n","         0.00696608, -0.00673716]], dtype=float32)>, <tf.Variable 'bidirectional_18/backward_lstm_18/lstm_cell_56/bias:0' shape=(512,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0.], dtype=float32)>, <tf.Variable 'bidirectional_19/forward_lstm_19/lstm_cell_58/kernel:0' shape=(128, 320) dtype=float32, numpy=\n","array([[ 0.0206501 ,  0.09200184, -0.01498587, ..., -0.06662448,\n","        -0.03931084,  0.00605495],\n","       [ 0.09064692, -0.06767527,  0.02442838, ..., -0.09924692,\n","        -0.01580565,  0.05674709],\n","       [ 0.04610643, -0.04903561, -0.04935849, ...,  0.03172413,\n","        -0.08282833,  0.05762964],\n","       ...,\n","       [-0.00020045, -0.05648423,  0.07178247, ..., -0.01620612,\n","        -0.02477184,  0.00539838],\n","       [ 0.00159681, -0.05950137,  0.06610283, ..., -0.03407498,\n","         0.02138878, -0.10506792],\n","       [ 0.09866048, -0.07707727,  0.05862667, ..., -0.07312579,\n","        -0.08811641, -0.08617915]], dtype=float32)>, <tf.Variable 'bidirectional_19/forward_lstm_19/lstm_cell_58/recurrent_kernel:0' shape=(80, 320) dtype=float32, numpy=\n","array([[ 0.00090086,  0.02998054, -0.04231298, ..., -0.02391794,\n","         0.04391695, -0.03671087],\n","       [ 0.01272552,  0.02771831,  0.03199728, ...,  0.04893655,\n","        -0.06359296,  0.00371196],\n","       [ 0.00898402,  0.0761054 ,  0.04981911, ..., -0.11570136,\n","         0.01073617, -0.03996463],\n","       ...,\n","       [ 0.08934157, -0.09924102,  0.11266621, ...,  0.02217691,\n","         0.01811215,  0.0336208 ],\n","       [ 0.06441493,  0.03722887,  0.03020544, ...,  0.02169126,\n","         0.09595011,  0.06996399],\n","       [-0.02478424,  0.04546064, -0.04926502, ..., -0.04842034,\n","         0.01200239, -0.00106614]], dtype=float32)>, <tf.Variable 'bidirectional_19/forward_lstm_19/lstm_cell_58/bias:0' shape=(320,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n","      dtype=float32)>, <tf.Variable 'bidirectional_19/backward_lstm_19/lstm_cell_59/kernel:0' shape=(128, 320) dtype=float32, numpy=\n","array([[-0.08481914, -0.04261659, -0.09292436, ...,  0.08858503,\n","        -0.01791765, -0.01678388],\n","       [ 0.03151377, -0.02256238, -0.08909225, ...,  0.03309211,\n","         0.01266101,  0.02782336],\n","       [-0.02366964, -0.02829101,  0.07159394, ..., -0.00520852,\n","        -0.09734087,  0.08398654],\n","       ...,\n","       [-0.09499379,  0.00389367,  0.03046401, ..., -0.1110269 ,\n","        -0.07812622,  0.09399298],\n","       [ 0.01340367, -0.08024032, -0.03272616, ...,  0.03768189,\n","         0.0534994 , -0.06958397],\n","       [-0.10820762,  0.07665184, -0.09235106, ...,  0.05130297,\n","         0.01546139,  0.11285159]], dtype=float32)>, <tf.Variable 'bidirectional_19/backward_lstm_19/lstm_cell_59/recurrent_kernel:0' shape=(80, 320) dtype=float32, numpy=\n","array([[ 0.09203911,  0.03978218,  0.0282618 , ..., -0.02638698,\n","         0.12417235,  0.0074708 ],\n","       [-0.05356119,  0.03584957,  0.0533329 , ...,  0.00587235,\n","        -0.02497815,  0.03521862],\n","       [ 0.07982182,  0.10199372,  0.04556727, ...,  0.01791544,\n","        -0.06765395, -0.0571451 ],\n","       ...,\n","       [ 0.00816445, -0.04052009,  0.10858452, ..., -0.11001493,\n","         0.03387106, -0.01963214],\n","       [-0.05890203, -0.02147438,  0.00033759, ..., -0.01681504,\n","        -0.01158372,  0.13898414],\n","       [ 0.01623407,  0.09786833,  0.1217116 , ...,  0.01164003,\n","        -0.08893397,  0.00137491]], dtype=float32)>, <tf.Variable 'bidirectional_19/backward_lstm_19/lstm_cell_59/bias:0' shape=(320,) dtype=float32, numpy=\n","array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","       1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n","      dtype=float32)>]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6-SpIX3hsR39","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":101},"executionInfo":{"status":"ok","timestamp":1595515477739,"user_tz":-330,"elapsed":67186,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"b52794b3-58e2-43b0-a133-56e2f9fd46aa"},"source":["model.fit(X1, Y1, epochs=2, batch_size=128)"],"execution_count":89,"outputs":[{"output_type":"stream","text":["Epoch 1/2\n","235/235 [==============================] - 33s 140ms/step - loss: 37.1540 - sparse_categorical_accuracy: 0.0000e+00 - accuracy: 0.0000e+00\n","Epoch 2/2\n","235/235 [==============================] - 33s 139ms/step - loss: 36.2913 - sparse_categorical_accuracy: 0.0000e+00 - accuracy: 0.0000e+00\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f4230a00a20>"]},"metadata":{"tags":[]},"execution_count":89}]},{"cell_type":"code","metadata":{"id":"Sf4BneV9u54R","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":218},"executionInfo":{"status":"ok","timestamp":1595515486439,"user_tz":-330,"elapsed":2728,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"677a54e0-8d5a-47a7-ce13-b1fba1175e07"},"source":["pred_str, out, strings = predict(model, X1[690:700], val_to_char)\n","print(out.shape)\n","for orig, ext in zip(pred_str, strings):\n","  print(orig+'\\t'+\"'\"+ext+\"'\")\n","print(out)"],"execution_count":90,"outputs":[{"output_type":"stream","text":["(10, 0)\n","................................\t''\n","................................\t''\n","................................\t''\n","................................\t''\n","................................\t''\n","................................\t''\n","................................\t''\n","................................\t''\n","................................\t''\n","................................\t''\n","tf.Tensor([], shape=(10, 0), dtype=int64)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"w7mmVl-ERFpf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":806},"executionInfo":{"status":"ok","timestamp":1595514716903,"user_tz":-330,"elapsed":1087,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"c01d5954-679b-4c19-f905-c5b545f34df0"},"source":["print(model.summary())"],"execution_count":59,"outputs":[{"output_type":"stream","text":["Model: \"model_6\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_7 (InputLayer)         [(None, 32, 128, 1)]      0         \n","_________________________________________________________________\n","conv2d_30 (Conv2D)           (None, 32, 128, 32)       832       \n","_________________________________________________________________\n","activation_30 (Activation)   (None, 32, 128, 32)       0         \n","_________________________________________________________________\n","max_pooling2d_30 (MaxPooling (None, 16, 64, 32)        0         \n","_________________________________________________________________\n","conv2d_31 (Conv2D)           (None, 16, 64, 64)        51264     \n","_________________________________________________________________\n","activation_31 (Activation)   (None, 16, 64, 64)        0         \n","_________________________________________________________________\n","max_pooling2d_31 (MaxPooling (None, 8, 32, 64)         0         \n","_________________________________________________________________\n","conv2d_32 (Conv2D)           (None, 8, 32, 128)        73856     \n","_________________________________________________________________\n","activation_32 (Activation)   (None, 8, 32, 128)        0         \n","_________________________________________________________________\n","max_pooling2d_32 (MaxPooling (None, 4, 16, 128)        0         \n","_________________________________________________________________\n","conv2d_33 (Conv2D)           (None, 4, 16, 128)        147584    \n","_________________________________________________________________\n","activation_33 (Activation)   (None, 4, 16, 128)        0         \n","_________________________________________________________________\n","max_pooling2d_33 (MaxPooling (None, 4, 8, 128)         0         \n","_________________________________________________________________\n","conv2d_34 (Conv2D)           (None, 4, 8, 256)         295168    \n","_________________________________________________________________\n","activation_34 (Activation)   (None, 4, 8, 256)         0         \n","_________________________________________________________________\n","max_pooling2d_34 (MaxPooling (None, 4, 8, 256)         0         \n","_________________________________________________________________\n","tf_op_layer_Reshape_6 (Tenso [(None, 32, 256)]         0         \n","_________________________________________________________________\n","bidirectional_12 (Bidirectio (None, 32, 128)           394240    \n","_________________________________________________________________\n","bidirectional_13 (Bidirectio (None, 32, 80)            133760    \n","=================================================================\n","Total params: 1,096,704\n","Trainable params: 1,096,704\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yynJVA9wD3ql","colab_type":"code","colab":{}},"source":["# %load_ext tensorboard\n","\n","# Clear any logs from previous runs\n","# !rm -rf ./logs/ \n","\n","# %tensorboard --logdir logs"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-R1uBtuGFvnC","colab_type":"code","colab":{}},"source":["# !kill 453"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"exxhOBSl96wg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1595510664482,"user_tz":-330,"elapsed":1089,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"1bbb406c-d116-4369-a938-dc96002887d1"},"source":["ind = 696\n","pred = model.predict(X1[ind:ind+1])\n","print(pred.shape)\n","pred = tf.argmax(pred, axis=-1)\n","print(pred.shape)"],"execution_count":24,"outputs":[{"output_type":"stream","text":["(1, 36, 80)\n","(1, 36)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"94PN-P-EY-HP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":118},"executionInfo":{"status":"ok","timestamp":1595510673169,"user_tz":-330,"elapsed":1385,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"686fa27f-d62d-42ff-d940-96390232de24"},"source":["print(Y1[ind])\n","print(\"\".join([val_to_char[v] for v in Y1[ind] if v != -1]))\n","print(pred)"],"execution_count":25,"outputs":[{"output_type":"stream","text":["[35 66 56 57 68 57 66 56 57 66 55 57 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n"," -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]\n","Independence\n","tf.Tensor(\n","[[42 42 42 42 42 42 42 17 17 17 17 17 17 48 48 48 48 48 48 48 48 48 48 48\n","  48 48 48 48 48 48 48 48 48 48 48 48]], shape=(1, 36), dtype=int64)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JayTKRAvHuHH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1595510696623,"user_tz":-330,"elapsed":1006,"user":{"displayName":"prince gupta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhLEQ0DdjmNG77m_6aO87M-iCtVOo3tSlvyEbxrbA=s64","userId":"18286757914794556648"}},"outputId":"bac7df2d-016e-4a83-9de3-61ac72c2ba07"},"source":["# pred = tf.random.uniform((36,1,80))\n","ind = 645\n","print(\"\".join([val_to_char[v] for v in Y1[ind] if v != -1]))\n","pred = tf.one_hot([ v if v!=-1 else 79 for v in Y1[ind] ], 80)\n","pred = tf.reshape(pred, (32,1,80))\n","seq_len = tf.ones((1,), dtype=tf.int32)*32\n","output,_ =tf.nn.ctc_greedy_decoder(pred, seq_len)\n","out = tf.sparse.to_dense(output[0])\n","print(out)\n","print(\"\".join([val_to_char[v] for v in out.numpy()[0] if v != 79]))"],"execution_count":26,"outputs":[{"output_type":"stream","text":["meet\n","tf.Tensor([[65 57 72]], shape=(1, 3), dtype=int64)\n","met\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UAMRuIce2SZW","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}